@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexModel;

@{
    ViewData["Title"] = "Home Page";
    var products = Model.Products;
}

<div class="text-center">
    <h1>Work table with data</h1>

    <table class="work-table">
        <tr> 
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Actions</th>
        </tr>

        @for (var i = 0; i < products.Count; i++)
        {
            <tr id="product_@i">
                <td>@i</td>
                <td><div id="name_text_@i">@products[i].Name</div></td>
                <td><div id="description_text_@i">@products[i].Description</div></td>
                <td><div id="price_text_@i">@products[i].Price</div></td>
                <td><div id="count_text_@i">@products[i].Count</div></td>
                <td>
                    <button id="edit_button_@i" onclick="onEditClick(@i)">✎</button>
                    <button onclick="onRefreshClick(@i)">⟳</button>
                    <button onclick="onDeleteClick(@i)">❌</button>
                </td>
            </tr>
        }
    </table>
</div>

<div>
    <h1>Create new item in work table</h1>
    <table class="create-table">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Actions</th>
        </tr>

        <tr>
            <td>
                <input type="text" placeholder="Input name" id="name_text_create" value=""/></td>
            <td>
                <input type="text" placeholder="Input description" id="description_text_create" value=""/></td>
            <td>
                <input type="number" placeholder="Input price" id="price_text_create" value=""/></td>
            <td>
                <input type="number" placeholder="Input count" id="count_text_create" value=""/></td>
            <td>
                <button id="create_button" onclick="onCreateClick()">Create</button>
            </td>
        </tr>
    </table>
</div>

<script>

async function onDeleteClick(id) {
   let response = await fetch(`/controller/${id}`, {
           method: "DELETE",
           headers: {
               'Content-Type': 'application/json;charset=utf-8'
           }
       });
           // Success - Remove the row from the table
       if (response.ok)
       {
            let deletedProductRow = document.getElementById(`product_${id}`);
            deletedProductRow.remove();
       }
       else {
       console.error(`Failed to delete product with ID ${id}`);
       }
}

async function onRefreshClick(i) {
    let response = await fetch(`/controller/${i}`);
    let product = await response.json();
    setProduct(i, product);
    
    let sendButton = document.getElementById(`send_button_${i}`); 
    
    if (sendButton) {
    let editButton = document.createElement("button");
    editButton.id = `edit_button_${i}`;
    editButton.innerText = "✎";
    editButton.onclick = () => { onEditClick(i); 
    }
    
    sendButton.replaceWith(editButton);}
}

function onEditClick(i) {
    createInput(i, "name");
    createInput(i, "description");
    createInput(i, "price");
    createInput(i, "count");
    
    let editButton = document.getElementById(`edit_button_${i}`);
    let sendButton = document.createElement("button");
    sendButton.id = `send_button_${i}`;
    sendButton.innerText = '✓';
    sendButton.onclick = () => { onSendUpdateClick(i); }
    
    editButton.replaceWith(sendButton);
}

function createInput(i, elementName) {
    let elementText = document.getElementById(`${elementName}_text_${i}`);
    let elementInput = document.createElement("input");
    elementInput.id = `${elementName}_input_${i}`;
    elementInput.value = elementText.innerText;
    elementText.innerHTML = "";
    elementText.appendChild(elementInput);
}

async function onCreateClick() {
        let inputName = document.getElementById('name_text_create').value;
        let inputDescription = document.getElementById('description_text_create').value;
        let inputPrice = document.getElementById('price_text_create').value;
        let inputCount = document.getElementById('count_text_create').value;
    
        let product = {
            Name: inputName,
            Description: inputDescription,
            Price: parseFloat(inputPrice),
            Count: parseInt(inputCount)
        };
    
        let response = await fetch('/controller', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(product)
        });
    
        if (response.ok) {
            location.reload();
        } else {
            console.error('Failed to create product');
        }
    }

async function onSendUpdateClick(id) {
    let updatedProduct = getProduct(id);
    let response = await fetch(`/controller/${id}`, {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(updatedProduct)
            });
    let updateProductFromServer = await response.json();
    
    setProduct(id,updateProductFromServer);
    
    let sendButton = document.getElementById(`send_button_${id}`);
    
    let editButton = document.createElement("button");
    editButton.id = `edit_button_${id}`;
    editButton.innerText = "✎";
    editButton.onclick = () => { onEditClick(id); }
    
    sendButton.replaceWith(editButton);
}

function getProduct(id) {
    let nameInput = document.getElementById(`name_input_${id}`);
            let name = nameInput.value;
            
            let descriptionInput = document.getElementById(`description_input_${id}`);
            let description = descriptionInput.value;
            
            let priceInput = document.getElementById(`price_input_${id}`);
            let price = priceInput.value;
            
            let countInput = document.getElementById(`count_input_${id}`);
            let count = countInput.value;
                    
            return {
                name, 
                description,
                price, 
                count
            };
}

function setProduct(id, product) {
        let nameText = document.getElementById(`name_text_${id}`);
        nameText.innerText = product.name;
        
        let descriptionText = document.getElementById(`description_text_${id}`);
        descriptionText.innerText = product.description;
        
        let priceText = document.getElementById(`price_text_${id}`);
        priceText.innerText = product.price;
                
        let countText = document.getElementById(`count_text_${id}`);
        countText.innerText = product.count;
        
}
</script>
